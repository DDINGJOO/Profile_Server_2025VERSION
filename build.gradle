plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.teambind'
version = '0.0.1-SNAPSHOT'
description = 'Profile-Server'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main {
        java {
        }
    }
}
ext {
    querydslVersion = '5.0.0'
}


repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.kafka:spring-kafka'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


    runtimeOnly 'com.h2database:h2' // 테스트시 임베디드 DB 사용 가능


    //DSL
    implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
    //QueryDsl
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //validator
    implementation 'org.springframework.boot:spring-boot-starter-validation'
}

tasks.named('test') {
    useJUnitPlatform()
}


tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

